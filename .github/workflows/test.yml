name: CodeCov

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sqlite:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9, "3.10", "3.11", "3.12" ]  # latest release minus two
        requirements-file: [
            dj32_cms41.txt,
            dj40_cms41.txt,
            dj41_cms41.txt,
            dj42_cms41.txt,
        ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}

      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests/requirements/${{ matrix.requirements-file }}
        python setup.py install

    - name: Run coverage
      run: coverage run setup.py test

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v2

  postgres:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9, "3.10", "3.11", "3.12" ]  # latest release minus two
        requirements-file: [
            dj32_cms41.txt,
            dj40_cms41.txt,
            dj41_cms41.txt,
            dj42_cms41.txt,
        ]

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}

      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests/requirements/${{ matrix.requirements-file }}
        python setup.py install

    - name: Run coverage
      run: coverage run setup.py test
      env:
        DATABASE_URL: postgres://postgres:postgres@127.0.0.1/postgres

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v2

  mysql:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9, "3.10", "3.11", "3.12" ]  # latest release minus two
        requirements-file: [
            dj32_cms41.txt,
            dj40_cms41.txt,
            dj41_cms41.txt,
            dj42_cms41.txt,
        ]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: djangocms_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}

      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests/requirements/${{ matrix.requirements-file }}
        python setup.py install

    - name: Run coverage
      run: coverage run setup.py test
      env:
        DATABASE_URL: mysql://root@127.0.0.1/djangocms_test

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v2

  cms-develop-sqlite:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11']
        requirements-file: ['dj42_cms41.txt']
        cms-version: [
          'https://github.com/django-cms/django-cms/archive/develop-4.tar.gz'
        ]
        os: [
          ubuntu-20.04,
        ]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}

      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r tests/requirements/${{ matrix.requirements-file }}
        python -m pip install ${{ matrix.cms-version }}
        python setup.py install

    - name: Run coverage
      run: coverage run setup.py test

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v2

  sqlite-django-main:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11" ]
        cms-version: [
          'https://github.com/django-cms/django-cms/archive/develop-4.tar.gz'
        ]
        django-version: [
          'https://github.com/django/django/archive/main.tar.gz'
        ]
        requirements-file: [
            requirements_base.txt,
        ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}

      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r tests/requirements/${{ matrix.requirements-file }}
        python -m pip install ${{ matrix.cms-version }} ${{ matrix.django-version }}
        python setup.py install

    - name: Run coverage
      run: coverage run setup.py test

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v2
