[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "djangocms-versioning"
description = "Versioning for django CMS"  # Dies muss manuell aktualisiert werden, da pyproject.toml keine dynamische Beschreibung unterstÃ¼tzt
readme = "README.rst"
requires-python = ">=3.6"
license = {text = "BSD License"}
authors = [
    {name = "Divio AG", email = "info@divio.ch"},
]
maintainers = [
    {name = "Django CMS Association and contributors", email = "info@django-cms.org"},
]
classifiers = [
    "Framework :: Django",
    "Framework :: Django CMS :: 4.1",
    "Framework :: Django CMS :: 5.0",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Topic :: Software Development",
]
dependencies = [
    "Django>=4.2",
    "django-cms>=4.1.1",
    "django-fsm<3",
    "packaging",
]

dynamic = [ "version" ]

[project.urls]
homepage = "https://github.com/django-cms/djangocms-versioning"

[tool.setuptools]
packages = ["djangocms_versioning"]

[tool.setuptools.dynamic]
version = { attr = "djangocms_versioning.__version__" }

[tool.ruff]
extend-exclude = [
  ".eggs",
  ".git",
  ".mypy_cache",
  ".ruff_cache",
  ".env",
  ".venv",
  "**migrations/**",
  "node_modules",
  "venv",
]
line-length = 120

[tool.ruff.lint]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "C",  # flake8-comprehensions
  "B",  # flake8-bugbear
  "Q",  # flake8-quotes
  "PLE", # pylint error
  "PLR", # pylint refactor
  "PLW", # pylint warning
  "UP",  # pyupgrade
]

extend-ignore = [
  "B006",  # Do not use mutable data structures for argument defaults
  "B011",  # tests use assert False
  "B019",  # Use of `functools.lru_cache` on methods can lead to memory leaks
  "B905",  # `zip()` without an explicit `strict=` parameter
  "C901",  # too complex functions
  "E402",  # module level import not at top of file
  "E731",  # do not assign a lambda expression, use a def
  "PLR0911",  # Too many return statements
  "PLR0912",  # Too many branches
  "PLR0913",  # Too many arguments to function call
  "PLR0915",  # Too many statements
  "PLR2004",  # Magic value used in comparison, consider replacing with a constant variable
  "UP007",  # Use `X | Y` for type annotations
]

# TODO: fix these checks separately
# "E501" - Line too long
# "F401" - Unused imports

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
  "F401"  # unused-import
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = [
  "djangocms_versioning",
]
extra-standard-library = ["dataclasses"]

[tool.coverage.run]
source = ["djangocms_versioning"]
omit = [
    "*apps.py,",
    "*cms_menus.py",
    "*constants.py,",
    "*migrations/*",
    "*test_utils/*",
    "*tests/*",
    "*venv/*",
]

[tool.coverage.report]
omit = ["djangocms_versioning/cms_menus.py"]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
]
